#!/bin/bash
#
#  Copyright (c) 2020, The OpenThread Authors.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#

set -euxo pipefail

OT_CMAKE_NINJA_TARGET=${OT_CMAKE_NINJA_TARGET:-}

readonly NRF_PLATFORMS=(nrf52811 nrf52833 nrf52840)
readonly NRF_BUILD_TYPES=(UART_trans USB_trans SPI_trans_NCP soft_crypto soft_crypto_threading)

readonly OT_SRCDIR="$(pwd)"
readonly OT_OPTIONS=(
    "-DCMAKE_BUILD_TYPE=MinSizeRel"
    "-DOT_PLATFORM=external"
    "-DOT_SLAAC=ON"
)

die()
{
    echo " ** ERROR: $1"
    exit 1
}

build()
{
    local builddir="${OT_CMAKE_BUILD_DIR:-build}"

    mkdir -p "${builddir}"
    cd "${builddir}"

    cmake -GNinja -DOT_COMPILE_WARNING_AS_ERROR=ON "$@" "${OT_SRCDIR}"

    if [[ -n ${OT_CMAKE_NINJA_TARGET[*]} ]]; then
        ninja "${OT_CMAKE_NINJA_TARGET[@]}"
    else
        ninja
    fi

    cd "${OT_SRCDIR}"
}

main()
{
    if [[ $# == 0 ]]; then
        echo "Please specify a platform: ${NRF_PLATFORMS[*]}"
        exit 1
    fi

    local platform="$1"
    echo "${NRF_PLATFORMS[@]}" | grep -wq "${platform}" || die "Unsupported platform ${platform}"

    if [[ $# == 1 ]]; then
        echo "Please specify build type: ${NRF_BUILD_TYPES[*]}"
        exit 1
    fi

    local nrf_build_type="$2"
    echo "${NRF_BUILD_TYPES[@]}" | grep -wq "${nrf_build_type}" || die "Unsupported build option ${nrf_build_type}"

    shift
    shift

    local local_options=()
    local options=("${OT_OPTIONS[@]}")

    case "${platform}" in
        nrf52811)
            local_options+=("-DCMAKE_TOOLCHAIN_FILE=src/${platform}/arm-none-eabi.cmake")
            case "${nrf_build_type}" in
                UART_trans)
                    OT_CMAKE_NINJA_TARGET=("ot-cli-mtd" "ot-rcp")
                    options+=("${local_options[@]}")
                    ;;
                SPI_trans_NCP)
                    OT_CMAKE_NINJA_TARGET=("ot-ncp-mtd" "ot-rcp")
                    options+=("${local_options[@]}" "-DOT_NCP_SPI=ON")
                    ;;
            esac
            ;;
        nrf52833)
            local_options+=("-DCMAKE_TOOLCHAIN_FILE=src/${platform}/arm-none-eabi.cmake")
            case "${nrf_build_type}" in
                UART_trans)
                    options+=("${local_options[@]}")
                    ;;
                USB_trans)
                    options+=("${local_options[@]}" "-DOT_USB=ON")
                    ;;
                SPI_trans_NCP)
                    OT_CMAKE_NINJA_TARGET=("ot-ncp-ftd" "ot-ncp-mtd" "ot-rcp")
                    options+=("${local_options[@]}" "-DOT_NCP_SPI=ON")
                    ;;
            esac
            ;;
        nrf52840)
            local_options+=("-DCMAKE_TOOLCHAIN_FILE=src/${platform}/arm-none-eabi.cmake")
            case "${nrf_build_type}" in
                UART_trans)
                    options+=("${local_options[@]}" "-DOT_EXTERNAL_MBEDTLS=nordicsemi-mbedtls")
                    ;;
                USB_trans)
                    options+=("${local_options[@]}" "-DOT_USB=ON" "-DOT_EXTERNAL_MBEDTLS=nordicsemi-mbedtls")
                    ;;
                SPI_trans_NCP)
                    OT_CMAKE_NINJA_TARGET=("ot-ncp-ftd" "ot-ncp-mtd" "ot-rcp")
                    options+=("${local_options[@]}" "-DOT_NCP_SPI=ON" "-DOT_EXTERNAL_MBEDTLS=nordicsemi-mbedtls")
                    ;;
                soft_crypto)
                    options+=("${local_options[@]}")
                    ;;
                soft_crypto_threading)
                    options+=("${local_options[@]}" "-DOT_MBEDTLS_THREADING=ON")
                    ;;
            esac
            ;;
    esac

    options+=("$@")
    build -DNRF_PLATFORM="${platform}" "${options[@]}"
}

main "$@"
